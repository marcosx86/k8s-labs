======================================================================
=== Docker

#!/bin/bash
apt-get remove --purge -y docker docker-engine docker.io containerd runc
apt-get update
apt-get install -y apt-transport-https ca-certificates curl gnupg-agent software-properties-common
curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -
add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable"
apt-get update
mkdir -p /etc/docker
cat > /etc/docker/daemon.json << EOF
{
	"bip": "172.31.0.1/16"
}
EOF
apt-get install -y docker-ce docker-ce-cli containerd.io
usermod -aG docker marcos
docker run hello-world

======================================================================
=== Docker logrotate

/var/log/pods/*/*.log {
    rotate 60
    daily
    copytruncate
    missingok
    notifempty
    compress
    maxsize 50M
    dateext
    dateformat -%Y%m%d-%s
    create 0644 root root
}

/var/lib/docker/containers/*/*.log {
    rotate 60
    daily
    copytruncate
    missingok
    notifempty
    compress
    maxsize 500M
    dateext
    dateformat -%Y%m%d-%s
    create 0644 root root
}

======================================================================
=== Kubernetes

#!/bin/bash
apt install -y arptables ebtables
update-alternatives --set iptables /usr/sbin/iptables-legacy
update-alternatives --set ip6tables /usr/sbin/ip6tables-legacy
update-alternatives --set arptables /usr/sbin/arptables-legacy
update-alternatives --set ebtables /usr/sbin/ebtables-legacy
cat > /etc/docker/daemon.json << EOF
{
	"bip": "172.31.0.1/16",
	"exec-opts": ["native.cgroupdriver=systemd"],
	"log-driver": "json-file",
	"log-opts": {
		"max-size": "100m"
	},
	"storage-driver": "overlay2"
}
EOF
mkdir -p /etc/systemd/system/docker.service.d
systemctl daemon-reload
systemctl restart docker
cat <<EOF | tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF
sysctl --system
apt-get update && sudo apt-get install -y apt-transport-https curl
curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -
cat <<EOF | sudo tee /etc/apt/sources.list.d/kubernetes.list
deb https://apt.kubernetes.io/ kubernetes-xenial main
EOF
apt-get update
apt-get install -y kubelet kubeadm kubectl
apt-mark hold kubelet kubeadm kubectl

======================================================================
=== Kubernetes post-init

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

source <(kubeadm completion bash)
source <(kubectl completion bash)

======================================================================
=== Glusterfs

#!/bin/bash
apt install -y gnupg2
wget -O - https://download.gluster.org/pub/gluster/glusterfs/7/rsa.pub | apt-key add -
DEBID=$(grep 'VERSION_ID=' /etc/os-release | cut -d '=' -f 2 | tr -d '"')
DEBVER=$(grep 'VERSION=' /etc/os-release | grep -Eo '[a-z]+')
DEBARCH=$(dpkg --print-architecture)
echo deb https://download.gluster.org/pub/gluster/glusterfs/LATEST/Debian/${DEBID}/${DEBARCH}/apt ${DEBVER} main > /etc/apt/sources.list.d/gluster.list
apt update
apt install -y glusterfs-server
systemctl enable glusterd.service
systemctl start glusterd.service

cat << EOF >> /etc/hosts

10.10.67.87 deb-gluster1.tjba.local deb-gluster1
10.10.67.88 deb-gluster2.tjba.local deb-gluster2
10.10.67.89 deb-gluster3.tjba.local deb-gluster3
EOF

/debian-vg/root -L6G
resize2fs /dev/debian-vg/root
cfdisk /dev/sdb
pvcreate /dev/sdb1
vgextend debian-vg /dev/sdb1
lvcreate debian-vg -n databrick -L5G
mkfs.xfs -i size=512 /dev/debian-vg/databrick

mkdir -p /srv/gluster/databrick
echo '/dev/debian-vg/databrick /srv/gluster/databrick xfs defaults 1 2' >> /etc/fstab
mount -a

gluster volume create volume1 deb-gluster1.tjba.local:/srv/gluster/databrick/volume1 deb-gluster2.tjba.local:/srv/gluster/databrick/volume1 deb-gluster3.tjba.local:/srv/gluster/databrick/volume1

======================================================================
=== Nexus / Docker config

"insecure-registries": ["10.10.67.76:3000", "10.10.67.76:3001"]

admin / adminNexus
{"auths": {"10.10.67.76:3000": {"auth": "YWRtaW46YWRtaW5OZXh1cw=="},"10.10.67.76:3001": {"auth": "YWRtaW46YWRtaW5OZXh1cw=="}}}
eyJhdXRocyI6IHsiMTAuMTAuNjcuNzY6MzAwMCI6IHsiYXV0aCI6ICJZV1J0YVc0NllXUnRhVzVPWlhoMWN3PT0ifSwiMTAuMTAuNjcuNzY6MzAwMSI6IHsiYXV0aCI6ICJZV1J0YVc0NllXUnRhVzVPWlhoMWN3PT0ifX19Cg==

apiVersion: v1
kind: Secret
type: kubernetes.io/dockerconfigjson
metadata:
  name: nexus-docker-registry
  namespace: default
data:
  .dockerconfigjson: eyJhdXRocyI6IHsiMTAuMTAuNjcuNzY6MzAwMCI6IHsiYXV0aCI6ICJZV1J0YVc0NllXUnRhVzVPWlhoMWN3PT0ifSwiMTAuMTAuNjcuNzY6MzAwMSI6IHsiYXV0aCI6ICJZV1J0YVc0NllXUnRhVzVPWlhoMWN3PT0ifX19Cg==
kubectl patch serviceaccount default -p '{"imagePullSecrets": [{"name": "nexus-docker-registry"}]}'

======================================================================
=== Helm

curl https://baltocdn.com/helm/signing.asc | sudo apt-key add -
sudo apt-get install apt-transport-https --yes
echo "deb https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
sudo apt-get update
sudo apt-get install helm

======================================================================
=== Helm 3

curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
./get_helm.sh -v v3.8.2

======================================================================
=== Metal LB

kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.12.1/manifests/namespace.yaml
kubectl apply -f https://raw.githubusercontent.com/metallb/metallb/v0.12.1/manifests/metallb.yaml
kubectl create secret generic -n metallb-system memberlist --from-literal=secretkey="$(openssl rand -base64 128)"

+ config

======================================================================
=== Kubernetes Dashboard

kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.6.0/aio/deploy/recommended.yaml
kubectl apply -f https://raw.githubusercontent.com/marcosx86/k8s-labs/master/yamls/kubernetes-dashboard/kubernetes-dashboard-admin.yaml
kubectl describe -n kubernetes-dashboard secret $(kubectl get secrets -n kubernetes-dashboard | grep admin-user | awk '{print $1}')

======================================================================
=== Basic Charts

helm repo add metrics-server https://kubernetes-sigs.github.io/metrics-server/
helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
helm repo add grafana-charts https://grafana.github.io/helm-charts

helm install -n kube-system --set hostNetwork.enabled=true --set args[0]="--kubelet-insecure-tls" metrics-server metrics-server/metrics-server --atomic --wait
helm install kps prometheus-community/kube-prometheus-stack --create-namespace -n monitoring-system --version 32.2.1 --set grafana.adminPassword=123mudar --wait --atomic

======================================================================
=== Istio

curl -L https://istio.io/downloadIstio | sh -
curl -L https://istio.io/downloadIstio | ISTIO_VERSION=1.13.4 TARGET_ARCH=x86_64 sh -

helm repo add istio https://istio-release.storage.googleapis.com/charts

helm install --version 1.13.4 istio-base istio/base --create-namespace -n istio-system --wait --atomic
helm install --version 1.13.4 istiod istio/istiod -n istio-system --wait --atomic
helm install --version 1.13.4 istio-ingress istio/gateway -n istio-system --wait --atomic

Grafana Dashboards Dashboards

7639 Istio Mesh Dashboard
7636 Istio Service Dashboard
7630 Istio Workload Dashboard
11829 Istio Performance Dashboard
7645 Istio Control Plane Dashboard

kubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.13/samples/addons/jaeger.yaml
kubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.13/samples/addons/prometheus.yaml
kubectl apply -f https://raw.githubusercontent.com/istio/istio/release-1.13/samples/addons/grafana.yaml

======================================================================
=== Kiali

helm repo add kiali https://kiali.org/helm-charts
helm install --version 1.49.0 --set cr.create=true --set cr.namespace=istio-system --namespace kiali-operator --create-namespace kiali-operator kiali/kiali-operator --wait --atomic

======================================================================
=== Kiali Config

kubectl edit -n istio-system kialis.kiali.io kiali

---
spec:
  deployment:
    accessible_namespaces:
    - '**'
    logger:
      log_level: debug
  external_services:
    grafana:
      auth:
        type: basic
        username: admin
        password: 123mudar
      in_cluster_url: http://kps-grafana.monitoring-system
      url: http://grafana.local
    istio:
      component_status:
        components:
        - app_label: istiod
          is_core: true
          is_proxy: false
          namespace: ""
        - app_label: istio-ingress
          is_core: true
          is_proxy: true
          namespace: ""
        enabled: true
    prometheus:
      url: http://prometheus-operated.monitoring-system:9090
    tracing:
      in_cluster_url: http://tracing.istio-system:16685/jaeger
      url: http://jaeger.local
      whitelist_istio_system:
      - jaeger-query
      - istio-ingress

======================================================================
=== ExternalDNS + PowerDNS

helm repo add external-dns https://kubernetes-sigs.githu^Cio/external-dns/
helm install --set provider=pdns --set extraArgs[0]=--pdns-server=http://192.168.88.55:8081 --set extraArgs[1]=--pdns-api-key=superapikeyforauthoritative --set domainFilters[0]=local --set sources[0]=service --set sources[1]=ingress --set sources[2]=istio-virtualservice --set sources[3]=istio-gateway --set policy=sync -n kube-system external-dns external-dns/external-dns --atomic --wait


